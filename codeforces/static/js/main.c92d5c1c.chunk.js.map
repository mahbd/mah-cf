{"version":3,"sources":["common/field.jsx","common/form.jsx","common/httpService.jsx","common/constant.jsx","common/authService.jsx","login/login.jsx","admin/home.jsx","admin/edit.jsx","common/spinner.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","this","props","name","label","error","value","type","onChange","placeholder","classInput","classGroup","passwordClass","className","htmlFor","id","autoComplete","aria-label","Component","defaultProps","Select","options","multiple","data-live-search","map","option","data-tokens","title","window","$","selectpicker","Form","validate","haveError","errors","key","schema","obj","state","data","validateProperty","schemaElement","length","isLength","min","max","email","isEmail","alphanumeric","isAlphanumeric","number","isNumeric","alpha","isAlpha","handleSubmit","e","preventDefault","console","log","setState","doSubmit","handleChange","input","currentTarget","errorMessage","handleChangeArray","i","l","selected","push","object","disabled","onClick","axios","defaults","headers","common","getJwt","interceptors","response","use","status","alert","Promise","reject","http","get","post","put","delete","apiEndPoint","apiEndpoint","username","password","a","jwt","localStorage","setItem","logout","removeItem","location","getCurrentUser","getItem","jwtDecode","auth","login","loginWithJwt","Login","trackPromise","style","padding","renderInput","renderButton","Home","useState","users","setUsers","useEffect","userPromise","results","getUsers","scope","user","href","cf_handle","batch","border","to","Edit","match","params","Spinner","promiseInProgress","usePromiseTracker","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2RAEaA,EAAb,uKAEc,IAAD,EACiGC,KAAKC,MAAtGC,EADA,EACAA,KAAMC,EADN,EACMA,MAAOC,EADb,EACaA,MAAOC,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,KAAMC,EADjC,EACiCA,SAAUC,EAD3C,EAC2CA,YAAaC,EADxD,EACwDA,WAAYC,EADpE,EACoEA,WAAYC,EADhF,EACgFA,cAKrF,MAJa,aAATL,IACAG,GAAcE,EACdD,EAAa,mBAGb,sBAAKE,UAAWF,EAAhB,UACKP,GACD,uBAAOU,QAAQ,SAAf,SAAyBV,IAEzB,uBAAOG,KAAMA,EAAMD,MAAOA,EAAOE,SAAUA,EAAUO,GAAIZ,EAAMA,KAAMA,EAAMU,UAAWH,EAC/EM,aAAa,MAAMP,YAAaA,EAAaQ,aAAW,WAC/D,4BAAG,4BACFZ,GAAS,qBAAKQ,UAAU,qBAAf,SAAqCR,WAhB/D,GAA2Ba,aAuB3BlB,EAAMmB,aAAe,CACjBZ,KAAM,OACNG,WAAY,eACZC,WAAY,aACZC,cAAe,gCAGZ,IAAMQ,EAAS,SAAC,GAAsE,IAArEjB,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,MAAOiB,EAAuD,EAAvDA,QAASb,EAA8C,EAA9CA,SAA8C,IAApCc,gBAAoC,SAAlBjB,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAC7E,OACI,eAAC,WAAD,WACA,sBAAKO,UAAU,aAAf,UACI,uBAAOC,QAASX,EAAhB,SAAuBC,IACvB,yBAAQmB,mBAAiB,OAAOD,SAAUA,EAAUnB,KAAMA,EAAMY,GAAIZ,EAAMG,MAAOA,EAAOE,SAAUA,EAC1FK,UAAU,sCADlB,UAEI,wBAAQP,MAAM,KACbe,EAAQG,KAAI,SAAAC,GAAM,OACf,wBAAwBC,cAAaD,EAAOE,MAAOrB,MAAOmB,EAAOV,GAAjE,SACKU,EAAOE,OADCF,EAAOV,UAK3BV,GAAS,qBAAKQ,UAAU,qBAAf,SAAqCR,OAE9CuB,OAAOC,EAAP,WAAa1B,IAAQ2B,aAAa,aAAc,MCyE9CC,E,4MAhHXC,SAAW,WACP,IAAIC,GAAY,EACZC,EAAS,GACb,IAAK,IAAIC,KAAO,EAAKC,OAAQ,CACzB,IACMC,EAAM,CAAClC,KAAMgC,EAAK7B,MADX,EAAKgC,MAAMC,KACYJ,IACpCD,EAAOC,GAAO,EAAKK,iBAAiBH,GAChCH,EAAOC,KACPF,GAAY,GAGpB,OAAIA,EACOC,EAEJ,M,EAGXM,iBAAmB,YAAoB,IAG3BpC,EAHSD,EAAiB,EAAjBA,KAAMG,EAAW,EAAXA,MACjBmC,EAAgB,EAAKL,OAAOjC,GAClC,OAAIsC,GAEsBrC,EAAtBqC,EAAcrC,MAAgBqC,EAAcrC,MAAgBD,EACxDsC,EAAcC,SACTC,YAASrC,EAAOmC,EAAcC,QACzB,GAAN,OAAUtC,EAAV,mCAA0CqC,EAAcC,OAAOE,IAA/D,gBAA0EH,EAAcC,OAAOG,KAAO,YAG1GJ,EAAcK,QACTC,YAAQzC,GAAc,GAAN,OAAUF,EAAV,0BAErBqC,EAAcO,eACTC,YAAe3C,GAAc,GAAN,OAAUF,EAAV,mCAE5BqC,EAAcS,SACTC,YAAU7C,GAAc,GAAN,OAAUF,EAAV,gCAEvBqC,EAAcW,QACTC,YAAQ/C,GAAc,GAAN,OAAUF,EAAV,gCAElB,MAEJ,M,EAGXkD,aAAe,SAAAC,GACXA,EAAEC,iBACF,IAAMtB,EAAS,EAAKF,WACpByB,QAAQC,IAAIxB,GACZ,EAAKyB,SAAS,CAACzB,OAAQA,GAAU,KAC7BA,GACJ,EAAK0B,Y,EAGTC,aAAe,YAA6B,IAAZC,EAAW,EAA1BC,cACP7B,EAAM,eAAO,EAAKI,MAAMJ,QACxB8B,EAAe,EAAKxB,iBAAiBsB,GACvCE,EAAc9B,EAAO4B,EAAM3D,MAAQ6D,SAC3B9B,EAAO4B,EAAM3D,MACzB,IAAMoC,EAAI,eAAO,EAAKD,MAAMC,MAC5BA,EAAKuB,EAAM3D,MAAQ2D,EAAMxD,MACzB,EAAKqD,SAAS,CAACpB,OAAML,Y,EAGzB+B,kBAAoB,YAIhB,IAJ6C,IAAZH,EAAW,EAA1BC,cACZ1C,EAAUyC,EAAMzC,QAChBf,EAAQ,GACV4D,EAAI,EAAGC,EAAI9C,EAAQqB,OAChBwB,EAAIC,EAAGD,IACN7C,EAAQ6C,GAAGE,UACX9D,EAAM+D,KAAKhD,EAAQ6C,GAAG5D,OAG9B,IAAMgE,EAAS,CAACP,cAAe,CAACzD,MAAOA,EAAOH,KAAM2D,EAAM3D,OAC1D,EAAK0D,aAAaS,I,2DAGTlE,GACT,OACI,wBAAQmE,SAAUtE,KAAK+B,WAAYwC,QAASvE,KAAKqD,aAAczC,UAAU,kBAAzE,SAA4FT,M,kCAIxFD,EAAMC,GAAuB,IAAhBG,EAAe,uDAAR,OAAQ,EACbN,KAAKqC,MAArBC,EAD6B,EAC7BA,KAAML,EADuB,EACvBA,OAEb,OAAO,cAAC,EAAD,CACH/B,KAAMA,EACNG,MAAOiC,EAAKpC,GACZC,MAAOA,EACPI,SAAUP,KAAK4D,aACfxD,MAAO6B,EAAO/B,GACdI,KAAMA,M,mCAIDJ,EAAMC,EAAOiB,GAA4B,IAAnBC,EAAkB,0DAC1BrB,KAAKqC,MAArBC,EAD0C,EAC1CA,KAAML,EADoC,EACpCA,OAEb,OACI,cAAC,EAAD,CACI/B,KAAMA,EACNG,MAAOiC,EAAKpC,GACZC,MAAOA,EACPiB,QAASA,EACTC,SAAUA,EACVd,SAAUc,EAAWrB,KAAKgE,kBAAmBhE,KAAK4D,aAClDxD,MAAO6B,EAAO/B,S,GA3GXe,a,iCCLnBuD,IAAMC,SAASC,QAAQC,OAAO,gBAAkBC,IAEhDJ,IAAMK,aAAaC,SAASC,IAAI,MAAM,SAAA3E,GAWlC,OATIA,EAAM0E,UACN1E,EAAM0E,SAASE,QAAU,KACzB5E,EAAM0E,SAASE,OAAS,MAGxBxB,QAAQC,IAAI,oBAAqBrD,GACjC6E,MAAM,yBAGHC,QAAQC,OAAO/E,MAG1B,IAOegF,EAPF,CACTC,IAAKb,IAAMa,IACXC,KAAMd,IAAMc,KACZC,IAAKf,IAAMe,IACXC,OAAQhB,IAAMgB,QCvBLC,EAAc,mCCIrBC,EAAcD,EAAc,U,4CAE3B,WAAqBE,EAAUC,GAA/B,iBAAAC,EAAA,sEACuBT,EAAKE,KAAKI,EAAa,CAACC,WAAUC,aADzD,gBACUE,EADV,EACIxD,KACPyD,aAAaC,QAAQ,QAASF,EAAIA,KAF/B,4C,sBAKA,SAASG,IACZF,aAAaG,WAAW,SACxBvE,OAAOwE,SAAW,SAGf,SAASC,IACZ,IACI,IAAMN,EAAMC,aAAaM,QAAQ,SACjC,OAAOC,YAAUR,GACnB,SACE,OAAO,MAQR,SAASlB,IACZ,OAAOmB,aAAaM,QAAQ,SAGhC,IAQeE,EARF,CACTC,MA5BG,SAAP,qCA6BIP,SACAQ,aAXG,SAAsBX,GACzBC,aAAaC,QAAQ,QAASF,IAW9BM,iBACAxB,UCQW8B,E,4MAvCXrE,MAAQ,CACJC,KAAM,CAACqD,SAAU,GAAIC,SAAU,IAC/B3D,OAAQ,I,EAGZE,OAAS,CACLwD,SAAU,CAACxF,MAAO,WAAYsC,OAAQ,CAACG,IAAK,GAAID,IAAK,IACrDiD,SAAU,CAACzF,MAAO,WAAYsC,OAAQ,CAACG,IAAK,GAAID,IAAK,K,EAGzDgB,S,sBAAW,kCAAAkC,EAAA,wEAE0B,EAAKxD,MAAMC,KAAjCqD,EAFJ,EAEIA,SAAUC,EAFd,EAEcA,SAFd,SAGGe,uBAAaJ,EAAKC,MAAMb,EAAUC,IAHrC,OAIHjE,OAAOwE,SAAW,IAJf,gDAMC,KAAGrB,UAAmC,MAAvB,KAAGA,SAASE,UACrB/C,EADqC,eACxB,EAAKI,MAAMJ,SACvB0D,SAAW,KAAGb,SAASxC,KAAKL,OACnC,EAAKyB,SAAS,CAACzB,YAThB,yD,uDAgBP,OAEI,qBAAKrB,UAAU,YAAYgG,MAAO,CAACC,QAAS,SAA5C,SACI,iCACK7G,KAAK8G,YAAY,WAAY,YAC7B9G,KAAK8G,YAAY,WAAY,WAAY,YACzC9G,KAAK+G,aAAa,kB,GAjCnBjF,G,gBCmCLkF,EApCF,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,KAYf,OATAC,qBAAU,WAAM,4CACZ,4BAAAvB,EAAA,sEAC8BT,EAAKC,IAAII,EAAc,qBADrD,OACU4B,EADV,OAEIF,EAASE,EAAY/E,KAAKgF,SAF9B,4CADY,uBAAC,WAAD,wBAMZC,KACD,IAGC,sBAAK3G,UAAU,gBAAf,UACI,wBAAOA,UAAU,uBAAjB,UACI,gCACA,+BACI,oBAAI4G,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,wBAGJ,gCAAQN,EAAM3F,KAAI,SAAAkG,GAAI,OAAI,+BACtB,6BAAKA,EAAKvH,OACV,6BAAI,mBAAGwH,KAAI,yCAAoCD,EAAKE,WAAhD,SAA8DF,EAAKE,cACvE,6BAAKF,EAAKG,QACV,oBAAIhB,MAAO,CAACiB,OAAQ,OAApB,SACI,cAAC,IAAD,CAAMC,GAAE,gBAAWL,EAAK3G,IAAMF,UAAU,kBAAxC,sBAL2B6G,EAAK3G,YAS5C,cAAC,IAAD,CAAMgH,GAAG,YAAYlH,UAAU,qBAA/B,yBCkCGmH,E,4MA/DX1F,MAAQ,CACJC,KAAM,CAACpC,KAAM,GAAI0H,MAAO,EAAGD,UAAW,IACtC1F,OAAQ,I,EAGZE,OAAS,G,EAmBTwB,S,sBAAW,wCAAAkC,EAAA,yDACA/E,EAAM,EAAKb,MAAM+H,MAAMC,OAAvBnH,GADA,EAE0B,EAAKuB,MAAMC,KAArCpC,EAFA,EAEAA,KAAMyH,EAFN,EAEMA,UAAWC,EAFjB,EAEiBA,MACd,QAAP9G,EAHI,0CAKO6F,uBAAavB,EAAKG,IAAL,UAAYE,EAAZ,qBAAoC3E,EAApC,KAA2C,CAACZ,OAAMyH,YAAWC,WALjF,OAMCjG,OAAOwE,SAAW,IANnB,gDAQK,KAAGrB,UAAmC,MAAvB,KAAGA,SAASE,SACrB/C,EADqC,eACxB,KAAG6C,SAASxC,MAC/B,EAAKoB,SAAS,CAACzB,YAVpB,2DAeO0E,uBAAavB,EAAKE,KAAL,UAAaG,EAAb,WAAmC,CAACvF,OAAMyH,YAAWC,WAfzE,QAgBCjG,OAAOwE,SAAW,IAhBnB,mDAkBK,KAAGrB,UAAmC,MAAvB,KAAGA,SAASE,SACrB/C,EADqC,eACxB,KAAG6C,SAASxC,MAC/B,EAAKoB,SAAS,CAACzB,YApBpB,iE,2LAfG,SADHnB,EAAMd,KAAKC,MAAM+H,MAAMC,OAAvBnH,I,0CAG2B6F,uBAAavB,EAAKC,IAAL,UAAYI,EAAZ,qBAAoC3E,K,OAArEuG,E,OACAI,EAAOJ,EAAY/E,KACnBA,EAAO,CACTpC,KAAMuH,EAAKvH,KAAOuH,EAAKvH,KAAO,GAAI0H,MAAOH,EAAKG,MAC9CD,UAAWF,EAAKE,UAAYF,EAAKE,UAAY,IAEjD3H,KAAK0D,SAAS,CAACpB,S,kDAEfkB,QAAQC,IAAR,M,+IAiCR,OACI,sBAAK7C,UAAU,YAAf,UACKZ,KAAK8G,YAAY,OAAQ,QACzB9G,KAAK8G,YAAY,YAAa,qBAC9B9G,KAAK8G,YAAY,QAAS,QAAS,UACnC9G,KAAK+G,aAAa,e,GA1DhBjF,GCQJoG,EAXQ,WAAO,IACnBC,EAAqBC,8BAArBD,kBACP,OACI,8BACKA,GACD,qBAAKvH,UAAU,SAAf,2BCqBGyH,MArBf,WACI,OACI,eAAC,WAAD,WACI,qBAAKzH,UAAU,YAAf,SACKwF,KAAoB,iCACrB,gDAAmBA,IAAiBlG,KAApC,OACA,wBAAQU,UAAU,iBAAiB2D,QAAS0B,EAA5C,yBAIJ,cAAC,EAAD,KACEG,KAAoB,cAAC,IAAD,CAAU0B,GAAG,WACnC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOQ,KAAK,YAAYC,UAAWR,IACnC,cAAC,IAAD,CAAOO,KAAK,SAASC,UAAW7B,IAChC,cAAC,IAAD,CAAO4B,KAAK,IAAIC,UAAWvB,WCX5BwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c92d5c1c.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react';\n\nexport class Input extends Component {\n\n    render() {\n        let {name, label, error, value, type, onChange, placeholder, classInput, classGroup, passwordClass} = this.props;\n        if (type === \"password\") {\n            classInput += passwordClass;\n            classGroup = \" password-group\"\n        }\n        return (\n            <div className={classGroup}>\n                {label &&\n                <label htmlFor=\"{name}\">{label}</label>\n                }\n                <input type={type} value={value} onChange={onChange} id={name} name={name} className={classInput}\n                       autoComplete=\"off\" placeholder={placeholder} aria-label=\"Search\"/>\n                <p><small/></p>\n                {error && <div className=\"alert alert-danger\">{error}</div>}\n            </div>\n        )\n    }\n\n}\n\nInput.defaultProps = {\n    type: \"text\",\n    classInput: \"form-control\",\n    classGroup: \"form-group\",\n    passwordClass: \" password-field-minus-titles\",\n}\n\nexport const Select = ({name, label, options, onChange, multiple = false, error, value}) => {\n    return (\n        <Fragment>\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <select data-live-search=\"true\" multiple={multiple} name={name} id={name} value={value} onChange={onChange}\n                    className=\"selectpicker form-control AliceBlue\">\n                <option value=\"\"/>\n                {options.map(option => (\n                    <option key={option.id} data-tokens={option.title} value={option.id}>\n                        {option.title}\n                    </option>\n                ))}\n            </select>\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n            {window.$(`#${name}`).selectpicker('refresh') && false}\n        </Fragment>\n    );\n};\n","import React, {Component} from 'react';\nimport isAlphanumeric from \"validator/es/lib/isAlphanumeric\";\nimport isAlpha from \"validator/es/lib/isAlpha\";\nimport isNumeric from \"validator/es/lib/isNumeric\";\nimport isEmail from \"validator/es/lib/isEmail\";\nimport isLength from \"validator/es/lib/isLength\";\nimport {Input, Select} from \"./field\";\n\nclass Form extends Component {\n    validate = () => {\n        let haveError = false;\n        let errors = {}\n        for (let key in this.schema) {\n            const data = this.state.data;\n            const obj = {name: key, value: data[key]};\n            errors[key] = this.validateProperty(obj);\n            if (errors[key]) {\n                haveError = true\n            }\n        }\n        if (haveError) {\n            return errors;\n        }\n        return null;\n    }\n\n    validateProperty = ({name, value}) => {\n        const schemaElement = this.schema[name];\n        if (schemaElement) {\n            let label;\n            schemaElement.label ? label = schemaElement.label : label = name;\n            if (schemaElement.length) {\n                if (!isLength(value, schemaElement.length)) {\n                    return `${label} length must be between ${schemaElement.length.min} and ${schemaElement.length.max || \"infinite\"}`\n                }\n            }\n            if (schemaElement.email) {\n                if (!isEmail(value)) return `${label} is not a valid Email.`\n            }\n            if (schemaElement.alphanumeric) {\n                if (!isAlphanumeric(value)) return `${label} can be only letter and number.`\n            }\n            if (schemaElement.number) {\n                if (!isNumeric(value)) return `${label} should contain only number.`\n            }\n            if (schemaElement.alpha) {\n                if (!isAlpha(value)) return `${label} should contain only letter.`\n            }\n            return null;\n        }\n        return null;\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const errors = this.validate();\n        console.log(errors);\n        this.setState({errors: errors || {}});\n        if (errors) return;\n        this.doSubmit()\n    }\n\n    handleChange = ({currentTarget: input}) => {\n        const errors = {...this.state.errors};\n        const errorMessage = this.validateProperty(input);\n        if (errorMessage) errors[input.name] = errorMessage;\n        else delete errors[input.name];\n        const data = {...this.state.data};\n        data[input.name] = input.value;\n        this.setState({data, errors});\n    }\n\n    handleChangeArray = ({currentTarget: input}) => {\n        const options = input.options;\n        const value = [];\n        let i = 0, l = options.length;\n        for (; i < l; i++) {\n            if (options[i].selected) {\n                value.push(options[i].value);\n            }\n        }\n        const object = {currentTarget: {value: value, name: input.name}}\n        this.handleChange(object)\n    }\n\n    renderButton(label) {\n        return (\n            <button disabled={this.validate()} onClick={this.handleSubmit} className=\"btn btn-primary\">{label}</button>)\n    }\n\n\n    renderInput(name, label, type = 'text') {\n        const {data, errors} = this.state;\n\n        return <Input\n            name={name}\n            value={data[name]}\n            label={label}\n            onChange={this.handleChange}\n            error={errors[name]}\n            type={type}\n        />\n    }\n\n    renderSelect(name, label, options, multiple = false) {\n        const {data, errors} = this.state;\n\n        return (\n            <Select\n                name={name}\n                value={data[name]}\n                label={label}\n                options={options}\n                multiple={multiple}\n                onChange={multiple ? this.handleChangeArray: this.handleChange}\n                error={errors[name]}\n            />\n        );\n    }\n}\n\nexport default Form;","import axios from 'axios'\nimport {getJwt} from \"./authService\";\n\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\naxios.interceptors.response.use(null, error => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n\n    if(!expectedError) {\n        console.log(\"Logging the error\", error);\n        alert(\"An unexpected error.\");\n    }\n\n    return Promise.reject(error);\n});\n\nconst http = {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n};\n\nexport default http;","export const apiEndPoint = 'https://mah-cf.herokuapp.com/api';","import jwtDecode from 'jwt-decode';\nimport http from \"./httpService\";\nimport {apiEndPoint} from \"./constant\";\n\nconst apiEndpoint = apiEndPoint + \"/login/\";\n\nexport async function login(username, password) {\n    const {data: jwt} = await http.post(apiEndpoint, {username, password});\n    localStorage.setItem(\"token\", jwt.jwt);\n}\n\nexport function logout() {\n    localStorage.removeItem(\"token\");\n    window.location = '/login'\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(\"token\");\n        return jwtDecode(jwt)\n    } catch {\n        return null;\n    }\n}\n\nexport function loginWithJwt(jwt) {\n    localStorage.setItem(\"token\", jwt)\n}\n\nexport function getJwt() {\n    return localStorage.getItem(\"token\")\n}\n\nconst auth = {\n    login,\n    logout,\n    loginWithJwt,\n    getCurrentUser,\n    getJwt,\n}\n\nexport default auth;","import React from 'react';\nimport Form from \"../common/form\";\nimport {trackPromise} from \"react-promise-tracker\";\nimport auth from \"../common/authService\";\n\n\nclass Login extends Form {\n    state = {\n        data: {username: '', password: ''},\n        errors: {}\n    }\n\n    schema = {\n        username: {label: 'Username', length: {max: 30, min: 3}},\n        password: {label: 'Password', length: {max: 20, min: 6}},\n    }\n\n    doSubmit = async () => {\n        try {\n            const {username, password} = this.state.data\n            await trackPromise(auth.login(username, password));\n            window.location = '/';\n        } catch (ex) {\n            if (ex.response && ex.response.status === 400) {\n                const errors = {...this.state.errors};\n                errors.username = ex.response.data.errors;\n                this.setState({errors})\n            }\n        }\n\n    }\n\n    render() {\n        return (\n\n            <div className=\"container\" style={{padding: \"100px\"}}>\n                <form>\n                    {this.renderInput('username', 'Username')}\n                    {this.renderInput('password', 'Password', 'password')}\n                    {this.renderButton('Login')}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {apiEndPoint} from \"../common/constant\";\nimport http from \"../common/httpService\";\n\nconst Home = () => {\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        async function getUsers() {\n            const userPromise = await http.get(apiEndPoint + '/users/?limit=200');\n            setUsers(userPromise.data.results);\n        }\n\n        getUsers();\n    }, [])\n\n    return (\n        <div className=\"container p-5\">\n            <table className=\"table table-bordered\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">CF handle</th>\n                    <th scope=\"col\">Batch</th>\n                </tr>\n                </thead>\n                <tbody>{users.map(user => <tr key={user.id}>\n                    <td>{user.name}</td>\n                    <td><a href={`https://codeforces.com/profile/${user.cf_handle}`}>{user.cf_handle}</a></td>\n                    <td>{user.batch}</td>\n                    <td style={{border: \"0px\"}}>\n                        <Link to={`/edit/${user.id}`} className=\"btn btn-primary\">Edit</Link>\n                    </td>\n                </tr>)}</tbody>\n            </table>\n            <Link to=\"/edit/new\" className=\"btn-lg btn-primary\">Add new</Link>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport Form from \"../common/form\";\nimport {apiEndPoint} from \"../common/constant\";\nimport http from \"../common/httpService\";\nimport {trackPromise} from \"react-promise-tracker\";\n\nclass Edit extends Form {\n    state = {\n        data: {name: '', batch: 0, cf_handle: ''},\n        errors: {},\n    }\n\n    schema = {}\n\n    async componentDidMount() {\n        const {id} = this.props.match.params;\n        if(id !== 'new') {\n            try {\n                const userPromise = await trackPromise(http.get(`${apiEndPoint}/users/id=${id}`))\n                const user = userPromise.data;\n                const data = {\n                    name: user.name ? user.name : '', batch: user.batch,\n                    cf_handle: user.cf_handle ? user.cf_handle : ''\n                }\n                this.setState({data})\n            } catch (ex) {\n                console.log(ex)\n            }\n        }\n    }\n\n    doSubmit = async () => {\n        const {id} = this.props.match.params;\n        const {name, cf_handle, batch} = this.state.data;\n        if(id !== 'new') {\n            try {\n                await trackPromise(http.put(`${apiEndPoint}/users/id=${id}/`, {name, cf_handle, batch}));\n                window.location = '/'\n            } catch (ex) {\n                if (ex.response && ex.response.status === 400) {\n                    const errors = {...ex.response.data}\n                    this.setState({errors})\n                }\n            }\n        } else {\n            try {\n                await trackPromise(http.post(`${apiEndPoint}/users/`, {name, cf_handle, batch}))\n                window.location = '/'\n            } catch (ex) {\n                if (ex.response && ex.response.status === 400) {\n                    const errors = {...ex.response.data}\n                    this.setState({errors})\n                }\n            }\n\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {this.renderInput('name', 'Name')}\n                {this.renderInput('cf_handle', 'Codeforces Handle')}\n                {this.renderInput('batch', 'Batch', 'number')}\n                {this.renderButton('Save')}\n            </div>\n        );\n    }\n}\n\nexport default Edit;","import React from 'react';\nimport {usePromiseTracker} from \"react-promise-tracker\";\n\nexport const Spinner = () => {\n    const {promiseInProgress} = usePromiseTracker();\n    return (\n        <div>\n            {promiseInProgress &&\n            <div className=\"loader\">Loading...</div>\n            }\n        </div>\n    )\n};\n\nexport default Spinner;","import {Route, Switch, Redirect} from 'react-router-dom'\nimport Login from \"./login/login\";\nimport Home from \"./admin/home\";\nimport Edit from \"./admin/edit\";\nimport React, {Fragment} from \"react\";\nimport {getCurrentUser, logout} from \"./common/authService\";\nimport Spinner from \"./common/spinner\";\n\nfunction App() {\n    return (\n        <Fragment>\n            <div className=\"container\">\n                {getCurrentUser() && <span>\n                <h1>Logged in as: {getCurrentUser().name} </h1>\n                <button className=\"btn btn-danger\" onClick={logout}>Logout</button>\n                </span>\n                }\n            </div>\n            <Spinner />\n            {!getCurrentUser() && <Redirect to=\"/login\"/>}\n            <Switch>\n                <Route path=\"/edit/:id\" component={Edit}/>\n                <Route path=\"/login\" component={Login}/>\n                <Route path=\"/\" component={Home}/>\n            </Switch>\n        </Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}